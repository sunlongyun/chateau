<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.caichao.chateau.app.mapper.CountryChateauBeverageMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.caichao.chateau.app.entity.CountryChateauBeverage">
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="sku_code" property="skuCode" />
        <result column="en_title" property="enTitle" />
        <result column="pic_url" property="picUrl" />
        <result column="min_pic_url" property="minPicUrl" />
        <result column="supplier_id" property="supplierId"/>
        <result column="supplier_company_name" property="supplierCompanyName"/>
        <result column="chateau_title" property="chateauTitle"/>
        <result column="country_name" property="countryName"/>
        <result column="detail_pic_url" property="detailPicUrl" />
        <result column="description" property="description" />
        <result column="origin_price" property="originPrice" />
        <result column="price" property="price" />
        <result column="specs" property="specs"/>
        <result column="year" property="year" />
        <result column="stock" property="stock" />
        <result column="country_id" property="countryId"/>
        <result column="chateau_id" property="chateauId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="validity" property="validity" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, title, sku_code, en_title, pic_url, min_pic_url, detail_pic_url, description, origin_price, price,specs,
        `year`, stock, chateau_id, create_time, update_time, validity,supplier_company_name,chateau_title,country_name
    </sql>

    <!-- 查询列表-->
    <select id="getCountryChateauBeverageList" parameterType="com.caichao.chateau.app.controller.beverage.request.PageQueryReq" resultMap="BaseResultMap">
        SELECT * FROM country_chateau_beverage
        <trim prefix="where" prefixOverrides="and">
            <if test="searchKey != null">
                AND (
                title like concat('%',#{searchKey},'%')
                OR en_title like concat('%',#{searchKey},'%')
                OR  chateau_title like concat('%',#{searchKey},'%')
                OR country_name like concat('%',#{searchKey},'%')
                OR supplier_company_name like concat('%',#{searchKey},'%')
                )
            </if>
            <if test="chateauId != null">
                and chateau_id = #{chateauId}
            </if>
            <if test="supplierId != null">
                and supplier_id = #{supplierId}
            </if>
            <if test="countryId != null">
                and country_id =#{countryId}
            </if>
        </trim>
        <if test="sortKey != null">
            ORDER  BY ${sortKey} ${sortType}
        </if>
    </select>

    <!-- example通用查询-->
    <select id="selectByExample" parameterType="com.caichao.chateau.app.example.CountryChateauBeverageExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List" />
        from country_chateau_beverage
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>



    <!-- 条件-->
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                    #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
</mapper>
