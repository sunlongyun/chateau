<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chisong.green.farm.app.mapper.MerchantPaymentMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.chisong.green.farm.app.entity.MerchantPayment">
        <id column="id" property="id" />
        <result column="open_id" property="openId" />
        <result column="user_type" property="userType" />
        <result column="pay_type" property="payType" />
        <result column="user_name" property="userName" />
        <result column="status" property="status" />
        <result column="trade_no" property="tradeNo" />
        <result column="pay_id" property="payId" />
        <result column="payment_no" property="paymentNo" />
        <result column="amount" property="amount" />
        <result column="remark" property="remark" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="validity" property="validity" />
        <result column="pre_transfer_time" property="preTransferTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, open_id, user_type, pay_type, user_name, status, trade_no, pay_id, payment_no, amount, remark, create_time, update_time, validity, pre_transfer_time
    </sql>



    <!-- example通用查询-->
    <select id="selectByExample" parameterType="com.chisong.green.farm.app.example.MerchantPaymentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List" />
        from merchant_payment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <!-- 条件-->
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                    #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
</mapper>
